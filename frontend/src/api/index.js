import axios from "axios";

const api = axios.create({
  baseURL: "http://localhost:5050/api",
  withCredentials: true,
});

// ðŸ’¬ Messaging APIs

// âœ… Ø¬Ù„Ø¨ Ø§Ù„Ù…Ø­Ø§Ø¯Ø«Ø§Øª
export const fetchConversations = () => api.get("/conversations");

// âœ… Ø¬Ù„Ø¨ Ø±Ø³Ø§Ø¦Ù„ Ù…Ø­Ø§Ø¯Ø«Ø© Ù…Ø¹ÙŠÙ†Ø©
export const fetchMessages = (conversationId) =>
  api.get(`/messages/conversation/${conversationId}`);

export const deleteMessage = async (id) => {
  const res = await api.delete(`/messages/${id}`);
  return res.data;
};
// âœ… Ø¥Ø±Ø³Ø§Ù„ Ø±Ø³Ø§Ù„Ø© Ù†ØµÙŠØ©
export const sendMessage = async (conversationId, content) => {
  return await api.post("/messages", {
    conversationId,
    content,
  });
};

// âœ… Ø¬Ù„Ø¨ Ø£Ùˆ Ø¥Ù†Ø´Ø§Ø¡ Ù…Ø­Ø§Ø¯Ø«Ø© Ù…Ø¹ Ù…Ø³ØªØ®Ø¯Ù… Ù…Ø¹ÙŠÙ† (Ù…Ø«Ù„ Ø§Ù„Ù…ØªØ¨Ø±Ø¹)
export const getOrCreateConversation = async (userId, donationId) => {
  const res = await api.get(`/conversations/${userId}/${donationId}`);
  return res.data; // ÙŠØ¬Ø¨ Ø£Ù† ÙŠØ­ØªÙˆÙŠ Ø¹Ù„Ù‰ _id
};

api.interceptors.request.use((config) => {
  const token = document.cookie
    .split("; ")
    .find((row) => row.startsWith("token="))
    ?.split("=")[1];

  if (token) {
    config.headers.Authorization = `Bearer ${token}`;
  }

  return config;
});
